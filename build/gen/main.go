package main

import (
	"context"
	"fmt"
	"io"
	"log"
	"os"
	"os/exec"
)

func getVCSInfo(ctx context.Context) (string, error) {
	c := exec.CommandContext(ctx, "git", "log", "-1", "--pretty=format:%H,%ct")
	c.Stderr = os.Stderr
	r, err := c.StdoutPipe()
	if err != nil {
		return "", err
	}
	defer r.Close()

	if err := c.Start(); err != nil {
		return "", err
	}

	b, err := io.ReadAll(r)
	if err != nil {
		return "", err
	}

	if err := c.Wait(); err != nil {
		return "", err
	}

	return string(b), nil
}

func main() {
	info, err := getVCSInfo(context.Background())
	if err != nil {
		log.Fatal(err)
	}

	code := fmt.Sprintf(codeTemplate, info)
	if err := os.WriteFile("vcs_info.gen.go", []byte(code), 0644); err != nil {
		log.Fatal(err)
	}
}

var codeTemplate = `// Code generated by go generate; DO NOT EDIT.

import "github.com/kellegous/glue/build"
func init() {
	build.SetVCSInfo(%q)
}
`
